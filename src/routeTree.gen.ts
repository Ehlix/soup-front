/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CreateProfileImport } from './routes/create-profile'
import { Route as AuthImport } from './routes/auth'
import { Route as LoggedImport } from './routes/_logged'
import { Route as UserImport } from './routes/$user'
import { Route as LoggedNewArtworkImport } from './routes/_logged/new-artwork'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const UserFollowingsLazyImport = createFileRoute('/$user/followings')()
const UserFollowersLazyImport = createFileRoute('/$user/followers')()
const UserArtworksLazyImport = createFileRoute('/$user/artworks')()
const UserAboutLazyImport = createFileRoute('/$user/about')()

// Create/Update Routes

const CreateProfileRoute = CreateProfileImport.update({
  path: '/create-profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/create-profile.lazy').then((d) => d.Route),
)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const LoggedRoute = LoggedImport.update({
  id: '/_logged',
  getParentRoute: () => rootRoute,
} as any)

const UserRoute = UserImport.update({
  path: '/$user',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/$user.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserFollowingsLazyRoute = UserFollowingsLazyImport.update({
  path: '/followings',
  getParentRoute: () => UserRoute,
} as any).lazy(() =>
  import('./routes/$user/followings.lazy').then((d) => d.Route),
)

const UserFollowersLazyRoute = UserFollowersLazyImport.update({
  path: '/followers',
  getParentRoute: () => UserRoute,
} as any).lazy(() =>
  import('./routes/$user/followers.lazy').then((d) => d.Route),
)

const UserArtworksLazyRoute = UserArtworksLazyImport.update({
  path: '/artworks',
  getParentRoute: () => UserRoute,
} as any).lazy(() =>
  import('./routes/$user/artworks.lazy').then((d) => d.Route),
)

const UserAboutLazyRoute = UserAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => UserRoute,
} as any).lazy(() => import('./routes/$user/about.lazy').then((d) => d.Route))

const LoggedNewArtworkRoute = LoggedNewArtworkImport.update({
  path: '/new-artwork',
  getParentRoute: () => LoggedRoute,
} as any).lazy(() =>
  import('./routes/_logged/new-artwork.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$user': {
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/_logged': {
      preLoaderRoute: typeof LoggedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/create-profile': {
      preLoaderRoute: typeof CreateProfileImport
      parentRoute: typeof rootRoute
    }
    '/_logged/new-artwork': {
      preLoaderRoute: typeof LoggedNewArtworkImport
      parentRoute: typeof LoggedImport
    }
    '/$user/about': {
      preLoaderRoute: typeof UserAboutLazyImport
      parentRoute: typeof UserImport
    }
    '/$user/artworks': {
      preLoaderRoute: typeof UserArtworksLazyImport
      parentRoute: typeof UserImport
    }
    '/$user/followers': {
      preLoaderRoute: typeof UserFollowersLazyImport
      parentRoute: typeof UserImport
    }
    '/$user/followings': {
      preLoaderRoute: typeof UserFollowingsLazyImport
      parentRoute: typeof UserImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  UserRoute.addChildren([
    UserAboutLazyRoute,
    UserArtworksLazyRoute,
    UserFollowersLazyRoute,
    UserFollowingsLazyRoute,
  ]),
  LoggedRoute.addChildren([LoggedNewArtworkRoute]),
  AuthRoute,
  CreateProfileRoute,
])

/* prettier-ignore-end */
